import discord
from discord.ext import commands
import os
import logging
from myserver import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö logging
logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv("TOKEN")
ANNOUNCE_CHANNEL_ID = 1350128705648984197
LOG_CHANNEL_ID = 1350380441504448512

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)
server_on()  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå HTTP

async def log_message(sender: discord.Member, recipients: list, message: str):
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"""
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    log_text = (f"üìå **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á**\n"
                f"üë§ **‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á:** {sender} (ID: {sender.id})\n"
                f"üéØ **‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:** {', '.join([f'{user} (ID: {user.id})' for user in recipients])}\n"
                f"üí¨ **‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:** {message}")
    if log_channel:
        try:
            await log_channel.send(log_text)
        except discord.Forbidden:
            logging.error("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á log!")
    else:
        logging.info(log_text)

@bot.event
async def on_ready():
    logging.info(f"‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: {bot.user}")
    try:
        await bot.tree.sync()
        logging.info("‚úÖ ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash ‡∏ñ‡∏π‡∏Å‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡πÅ‡∏•‡πâ‡∏ß!")
    except Exception as e:
        logging.error(f"‚ùå ‡∏ã‡∏¥‡∏á‡∏Ñ‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Slash ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {e}")

class SetupButtonView(discord.ui.View):
    """View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°"""
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üì© ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°", style=discord.ButtonStyle.primary)
    async def open_modal(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(MessageModal())

class MessageModal(discord.ui.Modal, title="üì© ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°"):
    message = discord.ui.TextInput(label="‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°", style=discord.TextStyle.paragraph, required=True)

    async def on_submit(self, interaction: discord.Interaction):
        all_members = [m for m in interaction.guild.members if not m.bot]
        if not all_members:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå", ephemeral=True)
            return
        await interaction.response.send_message("üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:", view=RecipientSelectView(self.message.value, interaction.user, all_members), ephemeral=True)

class RecipientSelectView(discord.ui.View):
    """View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö"""
    def __init__(self, message, sender, members, page=0):
        super().__init__(timeout=60)
        self.message = message
        self.sender = sender
        self.members = members
        self.page = page
        self.page_size = 25
        self.update_select_menu()

    def update_select_menu(self):
        self.clear_items()
        start, end = self.page * self.page_size, (self.page + 1) * self.page_size
        paged_members = self.members[start:end]
        options = [discord.SelectOption(label=m.display_name, value=str(m.id)) for m in paged_members]
        
        if options:
            select_menu = discord.ui.Select(
                placeholder=f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö... (‡∏´‡∏ô‡πâ‡∏≤ {self.page + 1})",
                min_values=1, max_values=min(3, len(options)),
                options=options
            )
            select_menu.callback = self.select_recipient_callback
            self.add_item(select_menu)

    async def select_recipient_callback(self, interaction: discord.Interaction):
        recipients = [interaction.guild.get_member(int(user_id)) for user_id in interaction.data["values"]]
        recipients = [user for user in recipients if user]
        if not recipients:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö", ephemeral=True)
            return
        
        mentions = " ".join([user.mention for user in recipients])
        final_message = f"{mentions}\n{self.message}"
        announce_channel = bot.get_channel(ANNOUNCE_CHANNEL_ID)
        
        if announce_channel:
            await announce_channel.send(final_message)
        else:
            for user in recipients:
                try:
                    await user.send(self.message)
                except discord.Forbidden:
                    logging.error(f"‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á {user.display_name} ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        
        await log_message(self.sender, recipients, self.message)
        await interaction.response.send_message("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

@bot.tree.command(name="setup", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
async def setup(interaction: discord.Interaction):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return
    
    embed = discord.Embed(
        title="üì© ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°",
        description="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô!",
        color=discord.Color.blue()
    )
    await interaction.response.defer(thinking=True)
    
    try:
        await interaction.channel.send(embed=embed, view=SetupButtonView())
        await interaction.followup.send("‚úÖ ‡∏õ‡∏∏‡πà‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)
        logging.info("‚úÖ /setup ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    except Exception as e:
        logging.error(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô /setup: {e}")
        await interaction.followup.send("‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", ephemeral=True)

bot.run(TOKEN)
