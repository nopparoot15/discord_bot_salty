import discord
from discord.ext import commands
import os
import logging
from myserver import server_on

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö logging ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á console
logging.basicConfig(level=logging.INFO)

TOKEN = os.getenv("TOKEN")
ANNOUNCE_CHANNEL_ID = 1350128705648984197  # ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ
LOG_CHANNEL_ID = 1350380441504448512  # ‡∏´‡πâ‡∏≠‡∏á logs ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

server_on()  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå HTTP ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Render

async def log_message(sender: discord.Member, recipients: list, message: str):
    """‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏´‡∏≤‡πÉ‡∏Ñ‡∏£"""
    log_channel = bot.get_channel(LOG_CHANNEL_ID)
    log_text = (f"üìå **‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á**\n"
                f"üë§ **‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á:** {sender} (ID: {sender.id})\n"
                f"üéØ **‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö:** {', '.join([f'{user} (ID: {user.id})' for user in recipients])}\n"
                f"üí¨ **‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤:** {message}")
    
    if log_channel:
        try:
            await log_channel.send(log_text)
        except discord.Forbidden:
            logging.error("‚ùå ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏™‡πà‡∏á log ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡πâ‡∏≠‡∏á logs!")
    else:
        logging.info(log_text)

class PreviousPageButton(discord.ui.Button):
    """‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö"""
    def __init__(self, view):
        super().__init__(label="‚¨ÖÔ∏è ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤", style=discord.ButtonStyle.secondary)
        self.view = view

    async def callback(self, interaction: discord.Interaction):
        if self.view.page > 0:
            self.view.page -= 1
            self.view.update_select_menu()
            await interaction.response.edit_message(view=self.view)

class NextPageButton(discord.ui.Button):
    """‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ"""
    def __init__(self, view):
        super().__init__(label="‚û°Ô∏è ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ", style=discord.ButtonStyle.secondary)
        self.view = view

    async def callback(self, interaction: discord.Interaction):
        if (self.view.page + 1) * self.view.page_size < len(self.view.members):
            self.view.page += 1
            self.view.update_select_menu()
            await interaction.response.edit_message(view=self.view)

class SetupButtonView(discord.ui.View):
    """‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏õ‡∏¥‡∏î MessageModal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°"""
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üì© ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°", style=discord.ButtonStyle.primary)
    async def open_modal(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_modal(MessageModal())

class RecipientSelectView(discord.ui.View):
    """‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤"""
    def __init__(self, message_content, sender, members, page=0):
        super().__init__(timeout=60)
        self.message_content = message_content
        self.sender = sender
        self.members = members
        self.page = page
        self.page_size = 25  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 25 ‡∏Ñ‡∏ô‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤
        self.update_select_menu()

    def update_select_menu(self):
        """‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Select Menu ‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"""
        self.clear_items()
        start, end = self.page * self.page_size, (self.page + 1) * self.page_size
        paged_members = self.members[start:end]
        options = [discord.SelectOption(label=member.display_name, value=str(member.id)) for member in paged_members]
        
        if options:
            select_menu = discord.ui.Select(
                placeholder=f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö... (‡∏´‡∏ô‡πâ‡∏≤ {self.page + 1}/{(len(self.members) - 1) // self.page_size + 1})",
                min_values=1, max_values=min(3, len(options)),
                options=options
            )
            select_menu.callback = self.select_recipient_callback
            self.add_item(select_menu)
        
        if self.page > 0:
            self.add_item(PreviousPageButton(self))
        if end < len(self.members):
            self.add_item(NextPageButton(self))

    async def select_recipient_callback(self, interaction: discord.Interaction):
        recipients = [interaction.guild.get_member(int(user_id)) for user_id in interaction.data["values"]]
        recipients = [user for user in recipients if user]
        if not recipients:
            await interaction.response.send_message("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà", ephemeral=True)
            return
        
        mentions = " ".join([user.mention for user in recipients])
        final_message = f"{mentions}\n{self.message_content}"
        announce_channel = bot.get_channel(ANNOUNCE_CHANNEL_ID)
        
        if announce_channel:
            await announce_channel.send(final_message)
        else:
            for user in recipients:
                try:
                    await user.send(self.message_content)
                except discord.Forbidden:
                    logging.error(f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á {user.display_name}")
        
        await log_message(self.sender, recipients, self.message_content)
        await interaction.response.send_message("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß!", ephemeral=True)

@bot.tree.command(name="setup", description="‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°")
async def setup(interaction: discord.Interaction):
    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    embed = discord.Embed(
        title="üì© ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°",
        description="‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô!",
        color=discord.Color.blue()
    )

    await interaction.response.defer()  # ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Interaction timeout
    await interaction.channel.send(embed=embed, view=SetupButtonView())

bot.run(TOKEN)
