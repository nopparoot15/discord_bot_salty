import discord
from discord.ext import commands
import os
from myserver import server_on

TOKEN = os.getenv("TOKEN")
ANNOUNCE_CHANNEL_ID = 1350128705648984197  # ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ
REACTION_EMOJI = "üì©"  # ‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏î
MESSAGE_PROMPT_CHANNEL_ID = 1350161594985746567  # ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á Embed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
bot = commands.Bot(command_prefix="!", intents=intents)

server_on()  # ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå HTTP ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Render

class MessageModal(discord.ui.Modal, title="üì© ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏∂‡∏á‡πÉ‡∏Ñ‡∏£‡∏ö‡∏≤‡∏á‡∏Ñ‡∏ô"):
    message = discord.ui.TextInput(label="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á", style=discord.TextStyle.paragraph, required=True)

    async def on_submit(self, interaction: discord.Interaction):
        await interaction.response.defer()  # ‡∏õ‡∏¥‡∏î Modal
        await interaction.followup.send(view=RecipientSelectView(self.message.value), ephemeral=True)

class RecipientSelectView(discord.ui.View):
    def __init__(self, message_content):
        super().__init__(timeout=60)
        self.message_content = message_content

    @discord.ui.select(placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö...", min_values=1, max_values=3, options=[])
    async def select_recipient(self, interaction: discord.Interaction, select: discord.ui.Select):
        recipients = [interaction.guild.get_member(int(user_id)) for user_id in select.values]
        mentions = " ".join([user.mention for user in recipients if user])
        final_message = f"{mentions}\n{self.message_content}"

        announce_channel = bot.get_channel(ANNOUNCE_CHANNEL_ID)
        if announce_channel:
            await announce_channel.send(final_message)
            await interaction.response.send_message("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!", ephemeral=True)

    async def interaction_check(self, interaction: discord.Interaction) -> bool:
        """‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏•‡∏á‡πÑ‡∏õ‡πÉ‡∏ô Select Menu"""
        members = [
            discord.SelectOption(label=member.display_name, value=str(member.id))
            for member in interaction.guild.members if not member.bot
        ]
        self.children[0].options = members
        return True

@bot.event
async def on_ready():
    print(f'‚úÖ ‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô: {bot.user}')
    await bot.tree.sync()

    # ‡∏™‡πà‡∏á Embed ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥
    message_channel = await bot.fetch_channel(MESSAGE_PROMPT_CHANNEL_ID)
    if message_channel:
        embed = discord.Embed(
            title="üì© ‡∏ù‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏£‡∏ô‡∏≤‡∏°",
            description=f"‡∏Å‡∏î {REACTION_EMOJI} ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡∏ï‡∏ô!",
            color=discord.Color.blue()
        )
        msg = await message_channel.send(embed=embed)
        await msg.add_reaction(REACTION_EMOJI)

@bot.event
async def on_reaction_add(reaction, user):
    """‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏î‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥ ‡∏ö‡∏≠‡∏ó‡∏à‡∏∞‡πÄ‡∏õ‡∏¥‡∏î Modal"""
    if user.bot:
        return

    if reaction.message.channel.id == MESSAGE_PROMPT_CHANNEL_ID and str(reaction.emoji) == REACTION_EMOJI:
        channel = await bot.fetch_channel(reaction.message.channel.id)
        message = await channel.fetch_message(reaction.message.id)

        # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ User ‡∏Å‡∏î‡∏≠‡∏µ‡πÇ‡∏°‡∏à‡∏¥‡∏à‡∏£‡∏¥‡∏á
        if user in [reactor for react in message.reactions for reactor in await react.users().flatten()]:
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á Interaction ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏¥‡∏î Modal
            class FakeInteraction:
                def __init__(self, user):
                    self.user = user

                async def response(self):
                    return self

                async def send_modal(self, modal):
                    await user.send("üì© ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì:", view=modal)

            interaction = FakeInteraction(user)
            await interaction.send_modal(MessageModal())

bot.run(TOKEN)
